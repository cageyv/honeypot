name: CI

on:
  push:
    tags: [ v* ]
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true
    
    - name: create binary_info.json file 
      run: |
        touch cmd/honeypot/binary_info.json
        echo "{}" > cmd/honeypot/binary_info.json
        go run cmd/honeypot/main.go -build

    - name: Run tests
      run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read
      checks: write
    needs: [ tests ]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare a snapshot release
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      uses: goreleaser/goreleaser-action@v3
      with:
        version: latest
        args: release --clean --snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release a new version
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      uses: goreleaser/goreleaser-action@v4
      with:
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 